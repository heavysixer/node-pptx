import globals from 'globals';
import js from '@eslint/js';
import babelParser from '@babel/eslint-parser';
import prettierConfig from 'eslint-config-prettier/flat';

export default [
  {
    ignores: ['node_modules/', 'coverage/'],
  },
  js.configs.recommended,
  {
    files: ['**/*.js', '**/*.mjs'],
    languageOptions: {
      ecmaVersion: 12,
      sourceType: 'module',
      parser: babelParser,
      parserOptions: {
        requireConfigFile: false,
        ecmaFeatures: {
          generators: true,
          experimentalObjectRestSpread: true,
        },
      },
      globals: {
        ...globals.browser,
        ...globals.node,
        ...globals.commonjs,
        ...globals.es2021,
        ...globals.jest,
      },
    },
    plugins: {},
    rules: {
      complexity: ['error', 15],
      'no-console': 'off',
      'prefer-template': 'warn',
      'array-callback-return': 'warn',
      'default-case': [
        'warn',
        {
          commentPattern: '^no default$',
        },
      ],
      eqeqeq: ['warn', 'allow-null'],
      'guard-for-in': 'warn',
      'no-array-constructor': 'warn',
      'no-caller': 'warn',
      'no-cond-assign': ['warn', 'always'],
      'no-const-assign': 'error',
      'no-control-regex': 'warn',
      'no-delete-var': 'error',
      'no-dupe-args': 'error',
      'no-dupe-class-members': 'error',
      'no-dupe-keys': 'error',
      'no-duplicate-case': 'error',
      'no-empty-character-class': 'warn',
      'no-empty-pattern': 'error',
      'no-eval': 'error',
      'no-ex-assign': 'error',
      'no-extend-native': 'warn',
      'no-extra-bind': 'warn',
      'no-extra-label': 'error',
      'no-fallthrough': 'warn',
      'no-func-assign': 'warn',
      'no-implied-eval': 'error',
      'no-invalid-regexp': 'error',
      'no-iterator': 'error',
      'no-label-var': 'error',
      'no-labels': [
        'error',
        {
          allowLoop: false,
          allowSwitch: false,
        },
      ],
      'no-lone-blocks': 'error',
      'no-loop-func': 'warn',
      'no-multi-str': 'warn',
      'no-native-reassign': 'error',
      'no-negated-in-lhs': 'error',
      'no-new-func': 'error',
      'no-new-object': 'warn',
      'no-new-symbol': 'warn',
      'no-new-wrappers': 'error',
      'no-obj-calls': 'error',
      'no-octal': 'warn',
      'no-octal-escape': 'warn',
      'no-redeclare': 'error',
      'no-regex-spaces': 'warn',
      'no-restricted-syntax': ['warn', 'LabeledStatement', 'WithStatement'],
      'no-script-url': 'warn',
      'no-self-assign': 'error',
      'no-self-compare': 'error',
      'no-sequences': 'error',
      'no-shadow-restricted-names': 'error',
      'no-sparse-arrays': 'error',
      'no-template-curly-in-string': 'warn',
      'no-this-before-super': 'warn',
      'no-throw-literal': 'warn',
      'no-undef': 'error',
      'no-unreachable': 'warn',
      'no-unused-expressions': [
        'warn',
        {
          allowShortCircuit: true,
          allowTernary: true,
        },
      ],
      'no-unused-labels': 'error',
      'no-unused-vars': [
        'warn',
        {
          vars: 'local',
          args: 'none',
        },
      ],
      'no-use-before-define': ['warn', { functions: false }],
      'no-useless-computed-key': 'warn',
      'no-useless-concat': 'warn',
      'no-useless-constructor': 'error',
      'no-useless-escape': 'error',
      'no-useless-rename': [
        'error',
        {
          ignoreDestructuring: false,
          ignoreImport: false,
          ignoreExport: false,
        },
      ],
      'no-var': 'error',
      'no-with': 'error',
      'operator-assignment': ['warn', 'always'],
      radix: 'warn',
      'require-yield': 'warn',
      'use-isnan': 'warn',
      'valid-typeof': 'error',
    },
  },
  prettierConfig,
];
